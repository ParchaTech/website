---
// Astro Components
import { Image } from "astro:assets";

// Components
import Button from "@/components/Button.astro";

// Contentful
import { getAssets } from "@/lib/contentful";

const rightGridAssets = await getAssets("right grid");
const leftGridAssets = await getAssets("left grid");
---

<script>
  import gsap from "gsap";
  import SplitType from "split-type";

  const calculateXPosition = (
    parentSelector: string,
    direction: number,
    offset: number,
  ) => {
    const parentElement = document.querySelector(parentSelector) as HTMLElement;
    const width = parentElement.offsetWidth - offset;
    return (width / 2) * direction;
  };

  const backgroundTimeline = () => {
    const timeline = gsap.timeline({
      defaults: {
        autoAlpha: 0.2,
        duration: 1,
        ease: "back.Out",
      },
    });

    timeline.fromTo(
      ".hero-left-grid > img",
      { autoAlpha: 0 },
      {
        x: calculateXPosition(".hero-left-grid", 1, 32),
        stagger: {
          amount: 2,
          from: "end",
        },
      },
    );

    timeline.fromTo(
      ".hero-right-grid > img",
      { autoAlpha: 0 },
      {
        x: calculateXPosition(".hero-left-grid", -1, 32),
        stagger: {
          amount: 2,
          from: "start",
        },
      },
      "<",
    );

    return timeline;
  };

  const textTimeline = () => {
    new SplitType(".hero__header");
    const timeline = gsap.timeline();

    timeline.from(".hero__header .char", {
      duration: 1.5,
      opacity: 0,
      scale: 0,
      y: 80,
      rotationX: 180,
      transformOrigin: "0% 50% -50",
      ease: "back",
      stagger: 0.05,
      delay: 0.8,
    });

    timeline.from(
      ".hero__description",
      {
        autoAlpha: 0,
        y: -100,
        duration: 0.8,
        ease: "back",
      },
      "<1.2",
    );

    return timeline;
  };

  const buttonTimeline = () => {
    const timeline = gsap.timeline();

    timeline.from("#hero > .content-layout > div > div > div", {
      autoAlpha: 0,
      y: 100,
      duration: 1.5,
      ease: "back",
    });

    return timeline;
  };

  const master = gsap.timeline();
  master.add(backgroundTimeline());
  master.add(textTimeline(), "<0.1");
  master.add(buttonTimeline(), ">-1.5");
  master.from(
    ".header-layout > img",
    {
      autoAlpha: 0,
      duration: 1.5,
      ease: "back.Out",
    },
    "<0.5",
  );
</script>
<section id="hero">
  <div
    class="absolute top-0 flex h-full w-full items-center justify-between gap-8"
  >
    <div class="hero-left-grid flex w-1/2 gap-8">
      <Image
        src={leftGridAssets[0]}
        inferSize
        alt="White grid in the background"
        class="opacity-0"
      />
      <Image
        src={leftGridAssets[1]}
        inferSize
        alt="White grid in the background"
        class="opacity-0"
      />
      <Image
        src={leftGridAssets[2]}
        inferSize
        alt="White grid in the background"
        class="opacity-0"
      />
      <Image
        src={leftGridAssets[3]}
        inferSize
        alt="White grid in the background"
        class="opacity-0"
      />
    </div>
    <div class="hero-right-grid flex w-1/2 justify-end gap-8">
      <Image
        src={rightGridAssets[0]}
        inferSize
        alt="White grid in the background"
        class="opacity-0"
      />
      <Image
        src={rightGridAssets[1]}
        inferSize
        alt="White grid in the background"
        class="opacity-0"
      />
      <Image
        src={rightGridAssets[2]}
        inferSize
        alt="White grid in the background"
        class="opacity-0"
      />
      <Image
        src={rightGridAssets[3]}
        inferSize
        alt="White grid in the background"
        class="opacity-0"
      />
    </div>
  </div>
  <div class="content-layout relative z-10">
    <div class="flex w-full items-center justify-center">
      <div class="w-full">
        <h1 class="hero__header text-8xl text-secondary">
          <span class="block text-[150px] leading-none"
            >Tecnología y
            <br />
            amigos</span
          >
          <span class="block">en un mismo lugar</span>
        </h1>
        <p class="hero__description mt-8 w-1/2 text-secondary">
          ParchaTech es una comunidad que brinda charlas enfocadas en el
          crecimiento personal y profesional, dentro del mundo de la tecnología.
        </p>
        <div class="mt-10 flex w-full items-center gap-10">
          <Button text="Agenda" type="secondary" href="/#talks" />
          <Button text="Únete a la comunidad" type="link" href="/#volunteer" />
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  #hero {
    background-color: var(--primary-color);
    height: 100vh;
  }

  .hero__header {
    margin: 0px;
    line-height: 100%;
    font-family: var(--secondary-font);
    font-weight: normal;
  }

  .hero__description {
    max-width: 550px;
    color: var(--secondary-color);
  }
</style>
