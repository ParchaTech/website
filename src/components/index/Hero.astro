---
// Astro Component
import { Image } from "astro:assets";

import heroCircle from "@/assets/hero_circle.svg";

// Components
import Button from "@/components/Button.astro";
---

<script>
  const addParallaxEffect = (elementList: NodeListOf<Element>) => {
    elementList.forEach((element) => {
      let animationTimeout: number;
      const htmlElement = element as HTMLElement;

      htmlElement.addEventListener("mouseenter", (e) => {
        clearTimeout(animationTimeout); // Avoids popping if the cursor instantly re-enter to the element

        htmlElement.style.transition = "transform 0.4s ease-in-out";

        htmlElement.style.animationPlayState = "paused";

        const computedElementStyles = window.getComputedStyle(htmlElement);
        const currentPosition = computedElementStyles.transform; // Get element position after pausing the animation

        htmlElement.style.transform = currentPosition; // Set the final animation position as the new element position
        htmlElement.style.animation = "none";

        const rect = htmlElement.getBoundingClientRect();
        const x = e.clientX - rect.left - rect.width / 2;
        const y = e.clientY - rect.top - rect.height / 2;

        // Based on the new position and the coordinates of the cursor, move the element
        htmlElement.style.transform = `translate(${x * -0.7}px, ${y * -0.7}px)`;
      });

      htmlElement.addEventListener("mouseleave", (e) => {
        htmlElement.style.transform = ""; // Reset element position to its original value before pausing the animation

        animationTimeout = setTimeout(() => {
          htmlElement.style.animation = ""; // Reset the animation after giving the element some time to return to its original position.
        }, 750);
      });
    });
  };

  const firstParallaxCircles = document.querySelectorAll(
    ".hero__grid div:first-child > img",
  );

  const secondParallaxCircles = document.querySelectorAll(
    ".hero__grid div:nth-child(2) > img",
  );

  addParallaxEffect(firstParallaxCircles);
  addParallaxEffect(secondParallaxCircles);
</script>

<section id="hero">
  <div class="hero__grid content-layout">
    <div
      class="col-start-2 row-span-3 row-start-1 hidden grid-cols-2 grid-rows-none md:grid"
    >
      <Image
        src={heroCircle}
        alt="Círculo grande de un degradado de naranja a morado"
        class="bounceSlow relative bottom-1/3 z-10 col-start-2 row-start-1 max-h-max max-w-72 xl:bottom-0"
      />
      <Image
        src={heroCircle}
        alt="Círculo mediano de un degradado de naranja a morado"
        class="bounceSlow relative top-1/4 z-20 col-start-2 row-start-1 max-h-max max-w-40 xl:left-full"
      />
      <Image
        src={heroCircle}
        alt="Círculo pequeño de un degradado de naranja a morado"
        class="bounceSlow relative left-16 top-8 z-30 col-start-2 row-start-1 max-h-max max-w-16 xl:left-3/4 xl:top-20 xl:justify-self-end"
      />
      <div class="col-start-1 row-start-1 h-2/3 w-full bg-primary"></div>
      <div class="col-start-2 row-start-1 h-full w-screen bg-primary"></div>
    </div>

    <div class="hidden grid-cols-2 grid-rows-none lg:grid">
      <Image
        src={heroCircle}
        alt="Círculo pequeño de un degradado de naranja a morado"
        class="bounceSlow relative bottom-1/3 z-20 col-start-1 row-start-1 max-h-max max-w-16 xl:bottom-1/4 xl:left-3/4"
      />
      <Image
        src={heroCircle}
        alt="Círculo grande de un degradado de naranja a morado"
        class="bounceSlow relative bottom-3/4 col-start-2 row-start-1 max-h-max max-w-72 xl:bottom-1/2 xl:left-full"
      />

      <Image
        src={heroCircle}
        alt="Círculo mediano de un degradado de naranja a morado"
        class="bounceSlow relative col-start-2 row-start-1 max-h-max max-w-40 drop-shadow-lg xl:left-full"
      />

      <Image
        src={heroCircle}
        alt="Círculo mediano de un degradado de naranja a morado"
        class="bounceSlow relative col-start-2 row-start-1 max-h-max max-w-40 self-end justify-self-end"
      />
    </div>
    <h1
      class="hero__header slideBottom-css animation-delay-1 col-span-2 col-start-1 row-start-1 w-full text-secondary"
    >
      Tecnología y<br /><span class="hero__header--gradient">amigos</span><br
      />en un mismo<br />
      <span class="text-primary">lugar</span>
    </h1>
    <p
      class="text-body hero__description animation-delay-1 slideLeft-css col-start-1 row-start-3"
    >
      ParchaTech es una comunidad que brinda charlas enfocadas en el crecimiento
      personal y profesional, dentro del mundo de la tecnología.
    </p>
    <div
      class="slideTop-css animation-delay-2 col-start-1 row-start-4 flex items-center justify-start gap-2 self-start md:gap-6 xl:gap-12"
    >
      <Button text="Agenda" type="primary" href="/#talks" />
      <Button text="Únete a la comunidad" type="link" href="/#volunteer" />
    </div>
  </div>
</section>

<style>
  #hero {
    background: linear-gradient(
      to bottom,
      var(--primary-color) 190px,
      var(--secondary-color) 32%
    );
    margin-bottom: 160px;
  }

  .hero__grid {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(3, auto);
    padding: 0 16px;
  }

  .hero__header {
    margin: 0px;
    font-size: 64px;
    line-height: 100%;
    font-family: var(--secondary-font);
    font-weight: normal;
  }

  .hero__header--gradient {
    color: transparent;
    background: linear-gradient(to left, var(--orange), var(--purple));
    background-clip: text;
  }

  .hero__description {
    margin: 24px 0;
    max-width: 550px;
    color: var(--primary-color);
  }

  @media (min-width: 768px) {
    .hero__grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .hero__grid {
      grid-template-columns: repeat(3, 1fr);
      padding: 0 64px;
    }
  }

  @media (min-width: 1280px) {
    #hero {
      background: linear-gradient(
        to bottom,
        var(--primary-color) 290px,
        var(--secondary-color) 32%
      );
      margin-bottom: 140px;
    }

    .hero__header {
      font-size: 96px;
    }
  }
</style>
