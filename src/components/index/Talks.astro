---
// Content query
import { getTalkEntries } from "@/lib/contentful";

// Components
import TalkCard from "@/components/TalkCard.astro";

const talkList = await getTalkEntries();
---

<script>
  const cards = document.querySelectorAll(".talks__header");
  if (cards) {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("visible");
          }
        });
      },
      { threshold: 0.3 },
    );

    cards.forEach((card) => observer.observe(card));
  }
</script>
<section id="talks">
  <div class="bg__grid-overlay-radial"></div>
  <h2 class="text-header talks__header">
    Pr√≥ximas<br />
    <span class="divider bg-primary xl:max-w-sm"></span>
    Charlas
  </h2>
  <div class="talks__container">
    {
      talkList.map((talk) => (
        <TalkCard
          title={talk.title}
          description={talk.description}
          date={talk.date}
          signUpURL={talk.signUpUrl}
          thumbnail={talk.thumbnail}
          color={talk.color}
          ctaDisabled={talk.ctaDisabled}
        />
      ))
    }
  </div>
</section>

<style>
  #talks {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 100px 16px;
  }

  .talks__header {
    margin-bottom: 75px;
    width: 100%;
    opacity: 0;
    transform: translateY(80%);
    transition:
      transform 1s ease-in-out,
      opacity 1s ease-in-out;
  }

  .talks__header.visible {
    opacity: 1;
    transform: translateY(0);
  }

  .talks__container {
    display: flex;
    justify-content: center;
    align-items: stretch;
    flex-wrap: wrap;
    gap: 24px;
  }

  .talks__header-divider {
    display: block;
    text-align: center;
    width: 30%;
    height: 2px;
    background-color: var(--primary-color);
    margin: 4px auto;
  }
</style>
